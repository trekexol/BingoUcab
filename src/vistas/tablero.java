/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;



import conn.conexion;
import java.util.Random;

public class tablero extends javax.swing.JFrame{

    
    Thread leyendo;    
    ArrayList<String[]> letras = new ArrayList();
    conexion conn;
    String modo;
    
    public tablero(conexion conn, String modo){
        initComponents();
        llenarTabla();
        this.conn = conn;
        this.conn.setLabel(lbJugada);
        this.conn.setTabla(tblInfo);
        this.conn.setLetras(letras);
        this.conn.setBoton(jButton1); 
        this.conn.setVentana(this); 
        this.modo = modo;
        System.out.println("Jugador: "+this.conn.getJugador());
        
        this.leyendo = new Thread(conn);
        this.leyendo.start();
        
        //conn.lectura();   
//        
//        lectura leido = conn.leer();
//        
//        System.out.println("Letra leida: " + leido.letra);
//        System.out.println("Numero leido: " + leido.numero);
        
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblInfo = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        lbJugada = new javax.swing.JLabel();
        mostrar = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblInfo.setBackground(new java.awt.Color(255, 255, 153));
        tblInfo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblInfo.setForeground(new java.awt.Color(102, 0, 255));
        tblInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "B", "I", "N", "G", "O"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblInfo.setFocusable(false);
        tblInfo.setGridColor(new java.awt.Color(153, 0, 255));
        tblInfo.setRowHeight(20);
        tblInfo.setSelectionBackground(new java.awt.Color(255, 102, 255));
        jScrollPane1.setViewportView(tblInfo);
        if (tblInfo.getColumnModel().getColumnCount() > 0) {
            tblInfo.getColumnModel().getColumn(0).setResizable(false);
            tblInfo.getColumnModel().getColumn(1).setResizable(false);
            tblInfo.getColumnModel().getColumn(2).setResizable(false);
            tblInfo.getColumnModel().getColumn(3).setResizable(false);
            tblInfo.getColumnModel().getColumn(4).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 380, 560, 130));

        jButton1.setBackground(new java.awt.Color(0, 204, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jButton1.setText("Bingo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, 150, 80));

        lbJugada.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbJugada.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(lbJugada, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 150, 80));

        mostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/tablero5.jpg"))); // NOI18N
        mostrar.setPreferredSize(new java.awt.Dimension(1421, 600));
        getContentPane().add(mostrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(-300, -20, 1100, 559));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       
        // ACA SE DEBE REVISAR SI LA PERSONA PUEDE HACER BINGO, si no, no manda nada
        if(chequearBingo(this.modo))
            this.conn.enviar("000", "00000000", this.conn.getJugador(), "01");
        
    }//GEN-LAST:event_jButton1ActionPerformed

    
   private void llenarTabla(){
    
    try{

        String[] columna = { "B","I","N","G","O"};
        DefaultTableModel dtm = new DefaultTableModel(null,columna);
        //  ArrayList<RegistroEmpleado> Lista= datos.todosLosEmpleados();

        int B=0,I=0,N=0,G=0,O = 0;
        // for (RegistroEmpleado est : Lista)
        
        
        for(int o = 1;o<6;o++)  {  
            String[] columnita = {"-1","-1","-1","-1","-1"};
            
            System.out.println("Izquierda: " + (15*o));
            System.out.println("Derecha: " + (((o-1)*15)+1));
            int j = 0;
            while(j<5){
                if (o == 3 && j==2){
//                    caso especial centro carton
                        columnita[j] = "X";
                        System.out.println("Agregado a " + o + " el numero: "+columnita[j]);
                        j++;
                }
                else{
                    boolean estaRepetido = false;
                    Random r = new Random();
                    int numero_random = 0;
//                    numero_random = r.nextInt((15*o)-(((o-1)*15)+1))+(((o-1)*15)+1);
                    switch (o){
                        case 1:
                            System.out.println("B");
                            numero_random = r.nextInt(15)+1;
                            break;
                        case 2:
                            System.out.println("I");
                            numero_random = r.nextInt(15)+16;
                            break;
                        case 3:
                            System.out.println("N");
                            numero_random = r.nextInt(15)+31;
                            break;
                        case 4:
                            System.out.println("G");
                            numero_random = r.nextInt(15)+46;
                            break;
                        case 5:
                            System.out.println("O");
                            numero_random = r.nextInt(15)+61;
                            break;
                    }
                    for (int c = 0; c<columnita.length;c++){
                        String tmp = columnita[c];
                        try{
                            if (Integer.parseInt(tmp)==numero_random){
                                estaRepetido = true;
                            }
                        }
                        catch(NumberFormatException e){}
                    }
                    if(!estaRepetido){
                        columnita[j] = String.valueOf(numero_random);
                        System.out.println("Agregado a " + o + " el numero: "+columnita[j]);
                        j++;
                    }
                }
            }
            
            letras.add(columnita);
        }
        
        for (int filita = 0; filita < 5; filita ++){
        
            String[] fila = {"-1","-1","-1","-1","-1"};
            
            for (int letra = 0; letra < letras.size(); letra++){
                String[] letra_columna = letras.get(letra);
                fila[letra] = letra_columna[filita];
            }
            
            dtm.addRow(fila);
                
        }

        tblInfo.setModel(dtm);


    }catch(Exception e){
        e.printStackTrace();
    }

    }
    
    public boolean chequearBingo(String modo){
        int columnas = this.tblInfo.getColumnCount();
        int filas = this.tblInfo.getRowCount();
        switch (modo){
            case "linea":
                boolean vertical = this.vertical(columnas, filas);
                boolean horizontal = this.horizontal(columnas, filas);
                boolean esquinas = this.esquinas(columnas, filas);
                boolean diagonal = this.diagonal(columnas, filas);
                if (vertical || horizontal || esquinas || diagonal) return true;
                break;
            case "lleno":
                if(this.cartonLleno(columnas, filas)) return true;
                break;
        }
        return false;
    }
   
    public boolean vertical(int columnas, int filas){
        int cantidad = 0;
        for(int c = 0; c < columnas; c++)
        {
            cantidad = 0;
            for(int f = 0; f < filas; f++)
            {
                String celda = (String)this.tblInfo.getValueAt(f, c);
                if(celda.charAt(0) == 'X') cantidad++;
            }
            if(cantidad == 5)
            {
                System.out.println("HUBO BINGO EN LA COLUMNA: "+c);
                return true;
            }
        }
        return false;
    }
    
    public boolean horizontal(int columnas, int filas){
        int cantidad = 0;
        for(int f = 0; f < filas; f++)
        {
            cantidad = 0;            
            for(int c = 0; c < columnas; c++)
            {
                String celda = (String)this.tblInfo.getValueAt(f, c);
                if(celda.charAt(0) == 'X') cantidad++;
            }
            if(cantidad == 5)
            {
                System.out.println("HUBO BINGO EN LA FILA: "+f);
                return true;
            }
        }
        return false;
    }
    
    public boolean esquinas(int columnas, int filas){
        String celda = (String)this.tblInfo.getValueAt(0, 0);
        String celda2 = (String)this.tblInfo.getValueAt(0, columnas-1);
        String celda3 = (String)this.tblInfo.getValueAt(filas-1, 0);
        String celda4 = (String)this.tblInfo.getValueAt(filas-1, columnas-1);
        if(celda.charAt(0) == 'X' && celda2.charAt(0) == 'X' && celda3.charAt(0) == 'X' && celda4.charAt(0) == 'X')
        {
            System.out.println("HUBO BINGO DE CUATRO ESQUINAS");
            return true;
        }        
        return false;
    }
    
    public boolean diagonal(int columnas, int filas){
        int cont = 0, cantidad1 = 0, cantidad2 = 0;
        while(cont < columnas)
        {
            String celda = (String)this.tblInfo.getValueAt(cont, cont);
            cont++;
            if(celda.charAt(0) == 'X') cantidad1++;
        }
        cont = 0;
        int fila = filas;
        while(cont < columnas)
        {
            fila--;
            String celda = (String)this.tblInfo.getValueAt(fila, cont);
            cont++;
            if(celda.charAt(0) == 'X') cantidad2++;
        }
        if(cantidad1 == 5 || cantidad2 == 5) 
        {
            System.out.println("HUBO BINGO DE DIAGONAL");
            return true;
        }
        return false;
    }
    
    public boolean cartonLleno(int columnas, int filas){
        int cantidad = 0;
        for(int c = 0; c < columnas; c++)
        {
            for(int f = 0; f < filas; f++)
            {
                String celda = (String)this.tblInfo.getValueAt(f, c);
                if(celda.charAt(0) == 'X') cantidad++;
            }
            if(cantidad == 25)
            {
                System.out.println("HUBO BINGO");
                return true;
            }
        }
        return false;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbJugada;
    private javax.swing.JLabel mostrar;
    private javax.swing.JTable tblInfo;
    // End of variables declaration//GEN-END:variables
}
